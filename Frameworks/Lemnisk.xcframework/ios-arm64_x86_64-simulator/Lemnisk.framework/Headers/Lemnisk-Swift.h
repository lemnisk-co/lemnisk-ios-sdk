#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef LEMNISK_SWIFT_H
#define LEMNISK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Dispatch;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
@import UserNotificationsUI;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Lemnisk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSCoder;

SWIFT_CLASS("_TtC7Lemnisk10CrashModel")
@interface CrashModel : NSObject <NSSecureCoding>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)decoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;
@class UIApplication;
@class NSData;
@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;
@class UNNotificationCategory;
@class NSNumber;

SWIFT_CLASS("_TtC7Lemnisk7Lemnisk")
@interface Lemnisk : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Lemnisk * _Nonnull shared;)
+ (Lemnisk * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)setLogLevel:(NSString * _Nonnull)logLevel;
/// This function would set the API Request type. Allowed arguments are either GET/POST
- (void)setRequestTypeWithType:(NSString * _Nonnull)type;
- (void)setSwizzleWithState:(BOOL)state;
- (void)setSwizzleForAllWithState:(BOOL)state;
/// This function would set the method swizzling for registration and didReceiveRemoteNotification.
- (void)setSwizzleForAppDelegatesWithState:(BOOL)state;
/// This function would set the method swizzling for all notification delegate methods.
- (void)setSwizzleForNotificationCenterDelegatesWithState:(BOOL)state;
- (BOOL)isLemniskPushWithUserInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
/// This function would show Push Notification authorization prompt with the given Action Categories. If the categories is passed as null,
/// then SDK will create the Default Action Categories.
- (void)registerForPushNotificationsWithCategories:(NSSet<UNNotificationCategory *> * _Nullable)categories;
/// This function would show Push Notification authorization prompt.
- (void)registerForPushNotificationsWithCompletion:(void (^ _Nullable)(BOOL, NSString * _Nonnull))completion;
/// This function would return IDFA tracking authorization status for iOS14+, for others it will return nil
- (NSString * _Nullable)getTrackingStatus SWIFT_WARN_UNUSED_RESULT;
/// This function would show the IDFA authorization prompt for iOS14+
- (NSString * _Nullable)showTrackingDialog SWIFT_WARN_UNUSED_RESULT;
/// This function would return the APNSToken if it exists otherwise returns empty string
- (NSString * _Nonnull)getAPNSToken SWIFT_WARN_UNUSED_RESULT;
/// This function would set the App Group Id to share the required data with the App extensions if any.
- (void)setAppGroupIDWithGroupId:(NSString * _Nonnull)groupId;
/// This function would set the Unique UserId (String) passed from the App, if the previous uniqueUserId
/// is not reset then SDK will force reset the Unique UserId.
- (void)setUniqueUserId:(NSString * _Nonnull)uniqueUserId;
/// This function would return the Unique UserId (String) if it was previously set by the App otherwise return nil
- (NSString * _Nullable)getUniqueUserId SWIFT_WARN_UNUSED_RESULT;
/// This function would reset all the identifiers that we would have already created/stored
/// <ul>
///   <li>
///     lemid
///   </li>
///   <li>
///     tokenized_cid
///   </li>
///   <li>
///     any cached custom consent state
///   </li>
/// </ul>
- (void)resetUser;
/// This function would set the unique device id whatever is passed by the customer.
/// <ul>
///   <li>
///     deviceId
///   </li>
/// </ul>
- (void)setCustomerDeviceIdWithDeviceId:(NSString * _Nonnull)deviceId;
/// This function would override the deviceId passed by the clietn
/// <ul>
///   <li>
///     deviceId
///   </li>
/// </ul>
- (void)overrideDeviceIdWithDeviceId:(NSString * _Nonnull)deviceId;
/// This function would return OS Conent for the device.
/// If the return value is, then user has
/// 0 - denied
/// 1 - authorized
/// 2 - notDetermined
/// 3 - unknown
- (void)getOSConsentWithCompletion:(void (^ _Nonnull)(NSInteger))completion;
/// This function would set the Consent Server Url, default is https://da-ae.lemnisk.co/consent/
- (void)setConsentServerUrlWithServerUrl:(NSString * _Nonnull)serverUrl;
/// This function would set the Custom Consent to device local storage and send sends it to server.
- (void)setCustomConsentWithTransConsent:(BOOL)transConsent promoConsent:(BOOL)promoConsent;
- (void)getCustomConsentObjcWithCompletion:(void (^ _Nonnull)(NSNumber * _Nullable, NSNumber * _Nullable))completion;
- (void)identify:(NSString * _Nullable)userId traits:(NSDictionary<NSString *, id> * _Nullable)traits otherIds:(NSDictionary<NSString *, id> * _Nullable)otherIds;
- (void)track:(NSString * _Nullable)event properties:(NSDictionary<NSString *, id> * _Nullable)properties otherIds:(NSDictionary<NSString *, id> * _Nullable)otherIds;
- (void)screen:(NSString * _Nullable)name properties:(NSDictionary<NSString *, id> * _Nullable)properties otherIds:(NSDictionary<NSString *, id> * _Nullable)otherIds;
- (void)trackAppBackgroundedEvent:(NSDictionary<NSString *, id> * _Nullable)properties;
- (void)trackAppCrashedEvent:(NSDictionary<NSString *, id> * _Nonnull)crashReport;
- (void)getUnreadCountObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markReadObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pid:(NSString * _Nonnull)pid completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markBulkReadObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pids:(NSArray<NSString *> * _Nonnull)pids completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markDeleteObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pid:(NSString * _Nonnull)pid completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markBulkDeleteObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pids:(NSArray<NSString *> * _Nonnull)pids completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)readAllObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid type:(NSString * _Nonnull)type completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)deleteAllObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid type:(NSString * _Nonnull)type completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)configureWithCampaignId:(NSString * _Nonnull)campaignId serverUrl:(NSString * _Nonnull)serverUrl;
- (void)configureWithCampaignId:(NSString * _Nonnull)campaignId serverUrl:(NSString * _Nonnull)serverUrl enablePush:(BOOL)enablePush;
- (void)configureWithCampaignId:(NSString * _Nonnull)campaignId serverUrl:(NSString * _Nonnull)serverUrl adserverUrl:(NSString * _Nonnull)adserverUrl enablePush:(BOOL)enablePush;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl enablePush:(BOOL)enablePush;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl notifcationCenterUrl:(NSString * _Nonnull)notifcationCenterUrl;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl launchOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl adserverUrl:(NSString * _Nonnull)adserverUrl enablePush:(BOOL)enablePush;
- (void)registerLemniskNotificationTasks;
- (void)setCertificatePinningEnabled:(BOOL)enabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface Lemnisk (SWIFT_EXTENSION(Lemnisk))
- (void)crashEyeDidCatchCrashWith:(CrashModel * _Nonnull)model;
@end


SWIFT_CLASS("_TtC7Lemnisk16LemniskAnalytics")
@interface LemniskAnalytics : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LemniskAnalytics * _Nonnull shared;)
+ (LemniskAnalytics * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCahceEnabled:(BOOL)cahceEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)logEventWithName:(NSString * _Nonnull)name traits:(NSDictionary<NSString *, id> * _Nullable)traits;
- (void)logEventWithTraits:(NSDictionary<NSString *, id> * _Nullable)traits;
- (void)logActivityWithName:(NSString * _Nonnull)name traits:(NSDictionary<NSString *, id> * _Nullable)traits;
- (BOOL)isLemniskPushNotificationWithUserInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC7Lemnisk19LemniskAppAnalytics")
@interface LemniskAppAnalytics : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Lemnisk18LemniskAppDelegate")
@interface LemniskAppDelegate : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LemniskAppDelegate * _Nonnull shared;)
+ (LemniskAppDelegate * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)didReceiveRemoteNotificationWithUserInfo:(NSDictionary * _Nonnull)userInfo;
- (void)handleNotificationActionWithCenter:(UNUserNotificationCenter * _Nonnull)center response:(UNNotificationResponse * _Nonnull)response;
- (void)willPresentRemoteNotification:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)didRegisterForRemoteNotificationsWithDeviceTokenWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)didFailToRegisterForRemoteNotificationsWithErrorWithError:(NSError * _Nonnull)error;
- (void)handleDeepLinkWithDeepLink:(NSString * _Nullable)deepLink;
@end


SWIFT_CLASS("_TtC7Lemnisk13LemniskBanner")
@interface LemniskBanner : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Lemnisk15LemniskCrashEye")
@interface LemniskCrashEye : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Lemnisk22LemniskEncryptionUtils")
@interface LemniskEncryptionUtils : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull kPrivateKeySuffix;
- (NSString * _Nonnull)getApplicationKeyTagForCertificatesWithType:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getApplicationKeyTagWithType:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LemniskLogLevel, open) {
  LemniskLogLevelDebug = 0,
  LemniskLogLevelOff = 1,
};


SWIFT_CLASS("_TtC7Lemnisk26LemniskMacroMappingHandler")
@interface LemniskMacroMappingHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Lemnisk25LemniskNSEEncryptionUtils")
@interface LemniskNSEEncryptionUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LemniskNSEEncryptionUtils * _Nonnull shared;)
+ (LemniskNSEEncryptionUtils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC7Lemnisk26LemniskNotificationService")
@interface LemniskNotificationService : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSLayoutConstraint;
@class UICollectionView;

SWIFT_CLASS("_TtC7Lemnisk23LemniskNotificationView")
@interface LemniskNotificationView : UIView
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified collectionviewHeightConstraint;
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified carousalCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC7Lemnisk33LemniskNotificationViewController")
@interface LemniskNotificationViewController : UIViewController <UNNotificationContentExtension>
- (void)viewDidLoad;
- (void)didReceiveNotification:(UNNotification * _Nonnull)notification;
- (void)didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(UNNotificationContentExtensionResponseOption))completion;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSIndexPath;
@class UICollectionViewCell;
@class UICollectionViewLayout;
@class UIScrollView;

@interface LemniskNotificationViewController (SWIFT_EXTENSION(Lemnisk)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


SWIFT_CLASS("_TtC7Lemnisk11LemniskPush")
@interface LemniskPush : NSObject <UNUserNotificationCenterDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL swizzled;)
+ (BOOL)swizzled SWIFT_WARN_UNUSED_RESULT;
+ (void)setSwizzled:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) dispatch_queue_t _Nonnull swizzleQueue;)
+ (dispatch_queue_t _Nonnull)swizzleQueue SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull destructiveCategories;
@property (nonatomic) BOOL alreadyCalledDidRegisterToken;
- (void)swizzleDelegateMethods;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Lemnisk16LemniskUtilities")
@interface LemniskUtilities : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end
















#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef LEMNISK_SWIFT_H
#define LEMNISK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Dispatch;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
@import UserNotificationsUI;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Lemnisk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSCoder;

SWIFT_CLASS("_TtC7Lemnisk10CrashModel")
@interface CrashModel : NSObject <NSSecureCoding>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL supportsSecureCoding;)
+ (BOOL)supportsSecureCoding SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)decoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)coder;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;
@class UIApplication;
@class NSData;
@class UNUserNotificationCenter;
@class UNNotificationResponse;
@class UNNotification;
@class UNNotificationCategory;
@class NSNumber;

SWIFT_CLASS("_TtC7Lemnisk7Lemnisk")
@interface Lemnisk : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Lemnisk * _Nonnull shared;)
+ (Lemnisk * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)setLogLevel:(NSString * _Nonnull)logLevel;
/// This function would set the API Request type. Allowed arguments are either GET/POST
- (void)setRequestTypeWithType:(NSString * _Nonnull)type;
- (void)setSwizzleWithState:(BOOL)state;
- (void)setSwizzleForAllWithState:(BOOL)state;
/// This function would set the method swizzling for registration and didReceiveRemoteNotification.
- (void)setSwizzleForAppDelegatesWithState:(BOOL)state;
/// This function would set the method swizzling for all notification delegate methods.
- (void)setSwizzleForNotificationCenterDelegatesWithState:(BOOL)state;
- (BOOL)isLemniskPushWithUserInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo SWIFT_WARN_UNUSED_RESULT;
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceive:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
/// This function would show Push Notification authorization prompt with the given Action Categories. If the categories is passed as null,
/// then SDK will create the Default Action Categories.
- (void)registerForPushNotificationsWithCategories:(NSSet<UNNotificationCategory *> * _Nullable)categories;
/// This function would show Push Notification authorization prompt.
- (void)registerForPushNotificationsWithCompletion:(void (^ _Nullable)(BOOL, NSString * _Nonnull))completion;
/// This function would return IDFA tracking authorization status for iOS14+, for others it will return nil
- (NSString * _Nullable)getTrackingStatus SWIFT_WARN_UNUSED_RESULT;
/// This function would show the IDFA authorization prompt for iOS14+
- (NSString * _Nullable)showTrackingDialog SWIFT_WARN_UNUSED_RESULT;
/// This function would return the APNSToken if it exists otherwise returns empty string
- (NSString * _Nonnull)getAPNSToken SWIFT_WARN_UNUSED_RESULT;
/// This function would set the App Group Id to share the required data with the App extensions if any.
- (void)setAppGroupIDWithGroupId:(NSString * _Nonnull)groupId;
/// This function would set the Unique UserId (String) passed from the App, if the previous uniqueUserId
/// is not reset then SDK will force reset the Unique UserId.
- (void)setUniqueUserId:(NSString * _Nonnull)uniqueUserId;
/// This function would return the Unique UserId (String) if it was previously set by the App otherwise return nil
- (NSString * _Nullable)getUniqueUserId SWIFT_WARN_UNUSED_RESULT;
/// This function would reset all the identifiers that we would have already created/stored
/// <ul>
///   <li>
///     lemid
///   </li>
///   <li>
///     tokenized_cid
///   </li>
///   <li>
///     any cached custom consent state
///   </li>
/// </ul>
- (void)resetUser;
/// This function would set the unique device id whatever is passed by the customer.
/// <ul>
///   <li>
///     deviceId
///   </li>
/// </ul>
- (void)setCustomerDeviceIdWithDeviceId:(NSString * _Nonnull)deviceId;
/// This function would override the deviceId passed by the clietn
/// <ul>
///   <li>
///     deviceId
///   </li>
/// </ul>
- (void)overrideDeviceIdWithDeviceId:(NSString * _Nonnull)deviceId;
/// This function would return OS Conent for the device.
/// If the return value is, then user has
/// 0 - denied
/// 1 - authorized
/// 2 - notDetermined
/// 3 - unknown
- (void)getOSConsentWithCompletion:(void (^ _Nonnull)(NSInteger))completion;
/// This function would set the Consent Server Url, default is https://da-ae.lemnisk.co/consent/
- (void)setConsentServerUrlWithServerUrl:(NSString * _Nonnull)serverUrl;
/// This function would set the Custom Consent to device local storage and send sends it to server.
- (void)setCustomConsentWithTransConsent:(BOOL)transConsent promoConsent:(BOOL)promoConsent;
- (void)getCustomConsentObjcWithCompletion:(void (^ _Nonnull)(NSNumber * _Nullable, NSNumber * _Nullable))completion;
- (void)identify:(NSString * _Nullable)userId traits:(NSDictionary<NSString *, id> * _Nullable)traits otherIds:(NSDictionary<NSString *, id> * _Nullable)otherIds;
- (void)track:(NSString * _Nullable)event properties:(NSDictionary<NSString *, id> * _Nullable)properties otherIds:(NSDictionary<NSString *, id> * _Nullable)otherIds;
- (void)screen:(NSString * _Nullable)name properties:(NSDictionary<NSString *, id> * _Nullable)properties otherIds:(NSDictionary<NSString *, id> * _Nullable)otherIds;
- (void)trackAppBackgroundedEvent:(NSDictionary<NSString *, id> * _Nullable)properties;
- (void)trackAppCrashedEvent:(NSDictionary<NSString *, id> * _Nonnull)crashReport;
- (void)getUnreadCountObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markReadObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pid:(NSString * _Nonnull)pid completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markBulkReadObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pids:(NSArray<NSString *> * _Nonnull)pids completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markDeleteObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pid:(NSString * _Nonnull)pid completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)markBulkDeleteObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid pids:(NSArray<NSString *> * _Nonnull)pids completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)readAllObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid type:(NSString * _Nonnull)type completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)deleteAllObjcWithTokenizedCid:(NSString * _Nonnull)tokenizedCid type:(NSString * _Nonnull)type completion:(void (^ _Nonnull)(NSNumber * _Nullable))completion;
- (void)configureWithCampaignId:(NSString * _Nonnull)campaignId serverUrl:(NSString * _Nonnull)serverUrl;
- (void)configureWithCampaignId:(NSString * _Nonnull)campaignId serverUrl:(NSString * _Nonnull)serverUrl enablePush:(BOOL)enablePush;
- (void)configureWithCampaignId:(NSString * _Nonnull)campaignId serverUrl:(NSString * _Nonnull)serverUrl adserverUrl:(NSString * _Nonnull)adserverUrl enablePush:(BOOL)enablePush;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl enablePush:(BOOL)enablePush;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl notifcationCenterUrl:(NSString * _Nonnull)notifcationCenterUrl;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl launchOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)configureWithWriteKey:(NSString * _Nonnull)writeKey serverUrl:(NSString * _Nonnull)serverUrl adserverUrl:(NSString * _Nonnull)adserverUrl enablePush:(BOOL)enablePush;
- (void)registerLemniskNotificationTasks;
- (void)setCertificatePinningEnabled:(BOOL)enabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface Lemnisk (SWIFT_EXTENSION(Lemnisk))
- (void)crashEyeDidCatchCrashWith:(CrashModel * _Nonnull)model;
@end


SWIFT_CLASS("_TtC7Lemnisk16LemniskAnalytics")
@interface LemniskAnalytics : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LemniskAnalytics * _Nonnull shared;)
+ (LemniskAnalytics * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithCahceEnabled:(BOOL)cahceEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)logEventWithName:(NSString * _Nonnull)name traits:(NSDictionary<NSString *, id> * _Nullable)traits;
- (void)logEventWithTraits:(NSDictionary<NSString *, id> * _Nullable)traits;
- (void)logActivityWithName:(NSString * _Nonnull)name traits:(NSDictionary<NSString *, id> * _Nullable)traits;
- (BOOL)isLemniskPushNotificationWithUserInfo:(NSDictionary<NSString *, id> * _Nullable)userInfo SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC7Lemnisk19LemniskAppAnalytics")
@interface LemniskAppAnalytics : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Lemnisk18LemniskAppDelegate")
@interface LemniskAppDelegate : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LemniskAppDelegate * _Nonnull shared;)
+ (LemniskAppDelegate * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)didReceiveRemoteNotificationWithUserInfo:(NSDictionary * _Nonnull)userInfo;
- (void)handleNotificationActionWithCenter:(UNUserNotificationCenter * _Nonnull)center response:(UNNotificationResponse * _Nonnull)response;
- (void)willPresentRemoteNotification:(UNUserNotificationCenter * _Nonnull)center willPresent:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
- (void)didRegisterForRemoteNotificationsWithDeviceTokenWithDeviceToken:(NSData * _Nonnull)deviceToken;
- (void)didFailToRegisterForRemoteNotificationsWithErrorWithError:(NSError * _Nonnull)error;
- (void)handleDeepLinkWithDeepLink:(NSString * _Nullable)deepLink;
@end


SWIFT_CLASS("_TtC7Lemnisk13LemniskBanner")
@interface LemniskBanner : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7Lemnisk15LemniskCrashEye")
@interface LemniskCrashEye : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Lemnisk22LemniskEncryptionUtils")
@interface LemniskEncryptionUtils : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull kPrivateKeySuffix;
- (NSString * _Nonnull)getApplicationKeyTagForCertificatesWithType:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getApplicationKeyTagWithType:(NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LemniskLogLevel, open) {
  LemniskLogLevelDebug = 0,
  LemniskLogLevelOff = 1,
};


SWIFT_CLASS("_TtC7Lemnisk26LemniskMacroMappingHandler")
@interface LemniskMacroMappingHandler : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Lemnisk25LemniskNSEEncryptionUtils")
@interface LemniskNSEEncryptionUtils : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LemniskNSEEncryptionUtils * _Nonnull shared;)
+ (LemniskNSEEncryptionUtils * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNNotificationRequest;
@class UNNotificationContent;

SWIFT_CLASS("_TtC7Lemnisk26LemniskNotificationService")
@interface LemniskNotificationService : UNNotificationServiceExtension
- (void)didReceiveNotificationRequest:(UNNotificationRequest * _Nonnull)request withContentHandler:(void (^ _Nonnull)(UNNotificationContent * _Nonnull))contentHandler;
- (void)serviceExtensionTimeWillExpire;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSLayoutConstraint;
@class UICollectionView;

SWIFT_CLASS("_TtC7Lemnisk23LemniskNotificationView")
@interface LemniskNotificationView : UIView
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified collectionviewHeightConstraint;
@property (nonatomic, weak) IBOutlet UICollectionView * _Null_unspecified carousalCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC7Lemnisk33LemniskNotificationViewController")
@interface LemniskNotificationViewController : UIViewController <UNNotificationContentExtension>
- (void)viewDidLoad;
- (void)didReceiveNotification:(UNNotification * _Nonnull)notification;
- (void)didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(UNNotificationContentExtensionResponseOption))completion;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSIndexPath;
@class UICollectionViewCell;
@class UICollectionViewLayout;
@class UIScrollView;

@interface LemniskNotificationViewController (SWIFT_EXTENSION(Lemnisk)) <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (CGSize)collectionView:(UICollectionView * _Nonnull)collectionView layout:(UICollectionViewLayout * _Nonnull)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
@end


SWIFT_CLASS("_TtC7Lemnisk11LemniskPush")
@interface LemniskPush : NSObject <UNUserNotificationCenterDelegate>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL swizzled;)
+ (BOOL)swizzled SWIFT_WARN_UNUSED_RESULT;
+ (void)setSwizzled:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) dispatch_queue_t _Nonnull swizzleQueue;)
+ (dispatch_queue_t _Nonnull)swizzleQueue SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull destructiveCategories;
@property (nonatomic) BOOL alreadyCalledDidRegisterToken;
- (void)swizzleDelegateMethods;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Lemnisk16LemniskUtilities")
@interface LemniskUtilities : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end
















#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
